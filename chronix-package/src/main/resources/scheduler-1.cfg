################################################################################
## Chronix configuration file.
##
## To get multiple schedulers running at the same time, simply duplicate this
## file and name the new file scheduler-n.cfg with n being an integer.
##
## The default values configure a single-node deployment.
##
## Logging is configured in separate file org.ops4j.pax.logging.cfg
##
################################################################################


################################################################################
## Mode choice
################################################################################

# An engine can run in two modes: single mode, runner mode or network mode.
# SCHEDULER: this is a scheduler.
# RUNNER: this not a scheduler but simply a remote execution agent.
# Default: SCHEDULER
# chronix.mode = RUNNER


################################################################################
## Cluster parameters (Scheduler mode only)
################################################################################

# Parameters in this section must be ignored if you are running a single
# lone scheduler.
# They are only needed for networks of schedulers.

# The name of the engine. Must be the same as in the environment metadata.
# This name must be unique in your Chronix cluster.
# If not set, the scheduler will consider it is running in single scheduler
# mode (i.e. no network of schedulers)
# Defaults to: not set.
# chronix.cluster.node.name = marsu

# This is used for automatic new scheduler node deployment.
# At startup, the engine will request all metadata (i.e. network of scheduler
# description + application plans) from another node.
# Usually this will be the "console" node - the node used for centralising logs.
# This is not compulsory - including the NETWORK file in your deployment
# also works great.
# Defaults to: not set.
# chronix.cluster.bootstrap.dns = console.local
# chronix.cluster.bootstrap.port = 1789


################################################################################
## [Single node] or [First node in network of schedulers] network bootstrap
################################################################################

# DNS and ports to listen to are normally described inside the ENVIRONMENT
# file. This file is stored inside the metadata database (the metabase).
# However, on first boot, the metabase is yet to be created, so these values
# are used to create the metabase.
# These values are only used if the ENVIRONMENT file does not exist AND if
# chronix.cluster.bootstrap.dns is not set.
# On subsequent boots, the ENVIRONMENT file will exist and these values will be
# ignored.
chronix.startup.bootstrap.dns = localhost
chronix.startup.bootstrap.qPort = 1789
chronix.startup.bootstrap.wsPort = 1790


################################################################################
## Paths
################################################################################

# The directory in which Chronix will store its databases, its plan
# configuration, its logs as well as the job logs.
# This is the metabase. There must be a distinct metabase for each node, even
# if they are running on the same server or even the same JVM.
# It will be created if it does not exist - just be wary of permissions.
# Always use forward slashes (/), even on Windows.
# Default: ./metabase (where . is the install directory)
# chronix.repository.path = ./metabase


################################################################################
## Debug engine parameters (only if engine is started)
################################################################################


################################################################################
## Runner (only if runner started)
################################################################################

# The max number of jobs running at a the same time
# Default is 5
# chronix.runner.maxjobs = 1
