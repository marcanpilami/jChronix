CREATE CACHED TABLE PUBLIC.CLOCKTICK(ID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, APPID VARCHAR(36) NOT NULL, CLOCKID VARCHAR(36) NOT NULL, TICKTIME TIMESTAMP NOT NULL);
CREATE INDEX I_CT_FK_CLOCK ON PUBLIC.CLOCKTICK(CLOCKID);

CREATE CACHED TABLE PUBLIC.ENVIRONMENTVALUE(ID VARCHAR(36) NOT NULL PRIMARY KEY, KEY VARCHAR(50) NOT NULL, VALUE VARCHAR(50), TRANSIENTID VARCHAR(36) NOT NULL);
CREATE INDEX I_EV_FK_TRANSIENT ON PUBLIC.ENVIRONMENTVALUE(TRANSIENTID);

CREATE MEMORY TABLE PUBLIC.EVENTCONSUMPTION(APPID VARCHAR(36) NOT NULL, PLACEID VARCHAR(36) NOT NULL, STATEID VARCHAR(36) NOT NULL, EVENTID VARCHAR(36) NOT NULL, 
PRIMARY KEY(APPID, PLACEID, STATEID, EVENTID));
CREATE INDEX I_EC_FK_EVENT ON PUBLIC.EVENTCONSUMPTION(EVENTID);

CREATE MEMORY TABLE PUBLIC.PIPELINEJOB(ID VARCHAR(36) NOT NULL PRIMARY KEY, ACTIVEID VARCHAR(36) NOT NULL, APPID VARCHAR(36) NOT NULL, CALENDARID VARCHAR(36), CALENDAROCCURRENCEID VARCHAR(36), CREATEDAT TIMESTAMP NOT NULL, IGNORECALENDARUPDATING BOOLEAN, OUTSIDECHAINLAUNCH BOOLEAN, PLACEID VARCHAR(36) NOT NULL, SIMULATIONID VARCHAR(36), STATEID VARCHAR(36) NOT NULL, VIRTUALTIME TIMESTAMP, BEGANRUNNINGAT TIMESTAMP, ENTEREDPIPEAT TIMESTAMP, KILLAT TIMESTAMP, LEVEL0ID VARCHAR(36), LEVEL1ID VARCHAR(36), LEVEL2ID VARCHAR(36), LEVEL3ID VARCHAR(36), MARKEDFORRUNAT TIMESTAMP, MUSTLAUNCHBEFORE TIMESTAMP, OUTOFPLAN BOOLEAN, RESULTCODE INTEGER, RUNTHIS VARCHAR(1024), STATUS VARCHAR(20) NOT NULL, STOPPEDRUNNINGAT TIMESTAMP, WARNNOTENDEDAT TIMESTAMP);

CREATE MEMORY TABLE PUBLIC.EVENT(ID VARCHAR(36) NOT NULL PRIMARY KEY, 
ANALYSED BOOLEAN, LOCALONLY BOOLEAN, BESTBEFORE TIMESTAMP, CONDITIONDATA1 INT, CONDITIONDATA2 VARCHAR(50), CONDITIONDATA3 VARCHAR(50), CONDITIONDATA4 VARCHAR(36), ACTIVEID VARCHAR(36) NOT NULL, APPID VARCHAR(36) NOT NULL, CALENDARID VARCHAR(36), CALENDAROCCURRENCEID VARCHAR(36), CREATEDAT TIMESTAMP NOT NULL, IGNORECALENDARUPDATING BOOLEAN, OUTSIDECHAINLAUNCH BOOLEAN, PLACEID VARCHAR(36) NOT NULL, SIMULATIONID VARCHAR(36), STATEID VARCHAR(36) NOT NULL, VIRTUALTIME TIMESTAMP, LEVEL0ID VARCHAR(36), LEVEL1ID VARCHAR(36), LEVEL2ID VARCHAR(36), LEVEL3ID VARCHAR(36));
CREATE INDEX I_EVT_1 ON PUBLIC.EVENT(LEVEL0ID, LEVEL1ID);

CREATE MEMORY TABLE PUBLIC.TOKENRESERVATION(ID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, APPLICATIONID VARCHAR(36) NOT NULL, GRANTEDON TIMESTAMP, LOCALRENEW BOOLEAN, PENDING BOOLEAN, PIPELINEJOBID VARCHAR(36) NOT NULL, PLACEID VARCHAR(36) NOT NULL, RENEWEDON TIMESTAMP, REQUESTEDBY VARCHAR(36) NOT NULL, REQUESTEDON TIMESTAMP, STATEID VARCHAR(36) NOT NULL, TOKENID VARCHAR(36) NOT NULL);

CREATE MEMORY TABLE PUBLIC.CALENDARPOINTER(ID VARCHAR(36) NOT NULL PRIMARY KEY, STATEID VARCHAR(36), PLACEID VARCHAR(36), APPID VARCHAR(36) NOT NULL, CALENDARID VARCHAR(36) NOT NULL, lastEndedOkOccurrenceId VARCHAR(36), lastStartedOccurrenceId VARCHAR(36), lastEndedOccurrenceId VARCHAR(36), nextRunOccurrenceId VARCHAR(36), latestFailed BOOLEAN, running BOOLEAN);
CREATE INDEX I_CP_FK_CALENDAR ON PUBLIC.CALENDARPOINTER(CALENDARID);
CREATE INDEX I_CP_1 ON PUBLIC.CALENDARPOINTER(STATEID, PLACEID, CALENDARID);

CREATE CACHED TABLE PUBLIC.RUNMETRICS(ID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,DURATION BIGINT,PLACEID VARCHAR(36),STARTTIME TIMESTAMP,STATEID VARCHAR(36));
CREATE INDEX I_RM_1 ON PUBLIC.RUNMETRICS(STATEID, PLACEID);

CREATE CACHED TABLE PUBLIC.RUNSTATS(ID BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY,MAXDURATION DOUBLE,MEANDURATION DOUBLE,MINDURATION DOUBLE,PLACEID VARCHAR(36),STATEID VARCHAR(36));
CREATE INDEX I_RS_1 ON PUBLIC.RUNSTATS(STATEID, PLACEID);

CREATE CACHED TABLE PUBLIC.VERSION(ID INT NOT NULL PRIMARY KEY, APPLIED TIMESTAMP NOT NULL);
